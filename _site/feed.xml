<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>牛さんの部落格</title>
    <description>notes about the coding life</description>
    <link>http://0.0.0.0:4000/</link>
    <atom:link href="http://0.0.0.0:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Tue, 13 Oct 2020 15:41:58 +0000</pubDate>
    <lastBuildDate>Tue, 13 Oct 2020 15:41:58 +0000</lastBuildDate>
    <generator>Jekyll v4.1.1</generator>
    
      <item>
        <title>Chrome Tab Group 的自动创建</title>
        <description>&lt;h1 id=&quot;chrome-tab-group-的自动创建&quot;&gt;Chrome Tab Group 的自动创建&lt;/h1&gt;

&lt;p&gt;新版 Chrome 引入了 Tab Group 的概念，可以将标签页进行分组，并且可以为分组设置不同的颜色，方便在标签页多的情况下进行查看和管理。&lt;/p&gt;

&lt;p&gt;但手动去分组未免还是太过麻烦，索性通过配置，可以让 Chrom 将标签自动分组，从一个页面新开的子页面，会自动归到同一组，这在进行搜索。&lt;/p&gt;

&lt;h2 id=&quot;配置&quot;&gt;配置&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;打开 &lt;a href=&quot;chrome://flags&quot;&gt;chrome://flags&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;搜索 group&lt;/li&gt;
  &lt;li&gt;开启 #tab-groups 和 #tab-groups-auto-create&lt;/li&gt;
  &lt;li&gt;重启 Chrome&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;使用&quot;&gt;使用&lt;/h2&gt;

&lt;p&gt;之后在打开新链接时，将会自动创建分组。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/3783096/93730137-e96ec280-fbf9-11ea-8206-099e9e44de20.gif&quot; alt=&quot;auto_tab_group mov&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 23 Sep 2020 15:09:00 +0000</pubDate>
        <link>http://0.0.0.0:4000/2020/09/23/Chrome-Tab-Group-%E7%9A%84%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA/</link>
        <guid isPermaLink="true">http://0.0.0.0:4000/2020/09/23/Chrome-Tab-Group-%E7%9A%84%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA/</guid>
        
        
      </item>
    
      <item>
        <title>配置 mac 邮件客户端将邮件分类</title>
        <description>&lt;h1 id=&quot;配置-mac-邮件客户端将邮件分类&quot;&gt;配置 mac 邮件客户端将邮件分类&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;在左侧导航中，点击 Exchange 上的＋ 添加新的分类&lt;/li&gt;
  &lt;li&gt;Location 选择 Exchange，这样分类能够在新环境下从 Exchange 服务器同步下来&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/3783096/93772285-3df15c80-fc51-11ea-8298-41d2f484dd81.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;新建 mailbox&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Command + , 打开设置，切换到 Rules 标签页&lt;/li&gt;
  &lt;li&gt;点击 Add Rule 添加新的规则&lt;/li&gt;
  &lt;li&gt;Description 中输入规则名&lt;/li&gt;
  &lt;li&gt;然后配置合适的转发规则&lt;/li&gt;
  &lt;li&gt;在规则匹配后执行的动作上，选择将邮件移动到刚刚创建的分组中，完成规则的配置&lt;/li&gt;
  &lt;li&gt;上面添加的 rules 会随着 iCloud 而在其他设备间同步&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Mon, 21 Sep 2020 14:09:00 +0000</pubDate>
        <link>http://0.0.0.0:4000/2020/09/21/%E9%85%8D%E7%BD%AE-mac-%E9%82%AE%E4%BB%B6%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%B0%86%E9%82%AE%E4%BB%B6%E5%88%86%E7%B1%BB/</link>
        <guid isPermaLink="true">http://0.0.0.0:4000/2020/09/21/%E9%85%8D%E7%BD%AE-mac-%E9%82%AE%E4%BB%B6%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%B0%86%E9%82%AE%E4%BB%B6%E5%88%86%E7%B1%BB/</guid>
        
        
      </item>
    
      <item>
        <title>Whistle mock 配置</title>
        <description>&lt;h1 id=&quot;whistle-mock-配置&quot;&gt;Whistle mock 配置&lt;/h1&gt;

&lt;h2 id=&quot;安装依赖&quot;&gt;安装依赖&lt;/h2&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;npm i &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; whistle.vase
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;配置-vase&quot;&gt;配置 vase&lt;/h2&gt;

&lt;p&gt;安装完成后，Whistle 插件界面会有对应展示，点击名称后进入插件配置界面，创建一个新的 mock 规则，引擎选择 「mock」:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/3783096/93778459-83fdee80-fc58-11ea-92bb-7adf34fcb1ba.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;确定之后输入如下内容：&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;list|3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;id|+1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;@string&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;avatar&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://lorempixel.com/100/100/&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;更加详细的 mock 语法参见 &lt;a href=&quot;https://github.com/nuysoft/Mock/wiki/Syntax-Specification&quot;&gt;nuysoft/Mock Wiki&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;配置-whistle-转发规则&quot;&gt;配置 Whistle 转发规则&lt;/h2&gt;

&lt;p&gt;添加 Whistle 转发规则，内容如下：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://mock.local/test.json vase://sample_json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;实际使用时，编写规则转发需要被 mock 的后端接口地址即可。&lt;/p&gt;

&lt;h2 id=&quot;测试&quot;&gt;测试&lt;/h2&gt;

&lt;p&gt;完成上述配置后，访问 &lt;a href=&quot;http://mock.local/test.json&quot;&gt;http://mock.local/test.json&lt;/a&gt; 可以看到 mock 返回：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/3783096/93778469-87917580-fc58-11ea-8274-e8a6ed8acced.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;跨域问题&quot;&gt;跨域问题&lt;/h2&gt;

&lt;p&gt;假如需要被 mock 的接口存在跨域的情况，浏览器会先发送 OPTIONS 请求。&lt;/p&gt;

&lt;p&gt;而这个 OPTIONS 请求会因为代理没有返回正确的响应头配置而失败：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Access to fetch at 'https://some/api' from origin 'https://some/domain' has been blocked by CORS policy: Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource. If an opaque response serves your needs, set the request's mode to 'no-cors' to fetch the resource with CORS disabled.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;此时需要配置 Whistle 的响应头，以允许跨域。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;resCors://*&lt;/code&gt; 表示设置 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;access-control-allow-origin: *&lt;/code&gt;，在启用 credential 的情况下是不行的，所以此处使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;resCors://enable&lt;/code&gt;：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# `enable` 表示设置 access-control-allow-origin: http://originHost
# 及access-control-allow-credentials: true
# 可用于script标签上设置为 `crossorigin=use-credentials`的情形
https://some/api resCors://enable vase://sample_json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;此设置虽然解决了跨域，但返回类型确不对：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;content-type: text/html; charset=utf8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;所以，进一步地，这里需要自定义响应头，将返回类型修正为 JSON。&lt;/p&gt;

&lt;p&gt;在 Values 面板创建变量 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CORSHeaders&lt;/code&gt; 内容为：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Access-Control-Allow-Credentials: true
Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers,X-Requested-With,X-Custom-Headers
Access-Control-Allow-Methods: POST, GET, OPTIONS, DELETE
Access-Control-Allow-Origin: some_domain
Content-Type: application/json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;其中需要注意 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Access-Control-Allow-Headers&lt;/code&gt;，启用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Access-Control-Allow-Credentials: true&lt;/code&gt; 的情况下不能指定 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Access-Control-Allow-Headers:*&lt;/code&gt;，因为此时 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*&lt;/code&gt; 并不代表通配符的意思。只能将所有要允许的 header 列出来。&lt;/p&gt;

&lt;p&gt;同时更新 Whistle 转发规则使用该变量：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://some/api resHeaders://{CORSHeaders} vase://sample_json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;相关资源&quot;&gt;相关资源&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/nuysoft/Mock/wiki/Syntax-Specification&quot;&gt;nuysoft/Mock Wiki&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://wproxy.org/whistle/rules/resCors.html&quot;&gt;Whistle 文档 - resCors&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Headers&quot;&gt;Access-Control-Allow-Headers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 21 Sep 2020 14:09:00 +0000</pubDate>
        <link>http://0.0.0.0:4000/2020/09/21/Whistle-mock-%E9%85%8D%E7%BD%AE/</link>
        <guid isPermaLink="true">http://0.0.0.0:4000/2020/09/21/Whistle-mock-%E9%85%8D%E7%BD%AE/</guid>
        
        
      </item>
    
      <item>
        <title>配置 ESLint 自动格式化自闭合标签（Self closing tag）</title>
        <description>&lt;h1 id=&quot;配置-eslint-自动格式化自闭合标签self-closing-tag&quot;&gt;配置 ESLint 自动格式化自闭合标签（Self closing tag）&lt;/h1&gt;

&lt;p&gt;对于没有子元素或不需要子元素的 HTML 标签，通常写成其自闭合的形式会显得简洁些，&lt;/p&gt;

&lt;div class=&quot;language-diff highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gd&quot;&gt;- &amp;lt;SomeComponent&amp;gt;&amp;lt;/SomeComponent&amp;gt;
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+ &amp;lt;SomeComponent/&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;通过配置 ESLint 可在格式化的时候将标签自动变成自闭合形式。&lt;/p&gt;

&lt;h2 id=&quot;安装依赖&quot;&gt;安装依赖&lt;/h2&gt;

&lt;p&gt;安装 ESLint 相关依赖：&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;yarn add eslint eslint-plugin-react
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果是 TypeScript 项目，还需要安装如下插件：&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;yarn add @typescript-eslint/eslint-plugin  @typescript-eslint/parser
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;配置-eslint&quot;&gt;配置 ESLint&lt;/h2&gt;

&lt;p&gt;通过 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yarn eslint --init&lt;/code&gt; 向导来完成创建，&lt;/p&gt;

&lt;p&gt;或手动创建 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.eslintrc.json&lt;/code&gt; 填入如下配置：&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;extends&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;eslint:recommended&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;plugin:react/recommended&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;parser&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;@typescript-eslint/parser&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;plugins&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;react&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;@typescript-eslint&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;rules&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;react/self-closing-comp&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;error&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;安装-eslint-for-vscode&quot;&gt;安装 ESLint for Vscode&lt;/h2&gt;

&lt;p&gt;当然了，还需要安装 VSCode 插件 &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint&quot;&gt;dbaeumer.vscode-eslint&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;然后配置 VSCode 在保存时自动进行修正动作：&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nl&quot;&gt;&quot;editor.codeActionsOnSave&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;source.fixAll.eslint&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;使用&quot;&gt;使用&lt;/h2&gt;

&lt;p&gt;完成上述配置后，如果发现保存时，格式并未生效，或者只 JavaScript 文件生效，需要补上如下的 VSCode 配置：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot;eslint.validate&quot;: [
    &quot;javascript&quot;,
    &quot;javascriptreact&quot;,
    &quot;typescript&quot;,
    &quot;typescriptreact&quot;,
  ]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;相关资源&quot;&gt;相关资源&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/yannickcr/eslint-plugin-react&quot;&gt;eslint-plugin-react&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/a/56558518/1553656&quot;&gt;ESLint in VSC not working for .ts and .tsx files&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 17 Sep 2020 15:09:00 +0000</pubDate>
        <link>http://0.0.0.0:4000/2020/09/17/%E9%85%8D%E7%BD%AE-ESLint-%E8%87%AA%E5%8A%A8%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%87%AA%E9%97%AD%E5%90%88%E6%A0%87%E7%AD%BE-Self-closing-tag/</link>
        <guid isPermaLink="true">http://0.0.0.0:4000/2020/09/17/%E9%85%8D%E7%BD%AE-ESLint-%E8%87%AA%E5%8A%A8%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%87%AA%E9%97%AD%E5%90%88%E6%A0%87%E7%AD%BE-Self-closing-tag/</guid>
        
        
      </item>
    
      <item>
        <title>iTerm2 安装 SF Mono 字体</title>
        <description>&lt;h1 id=&quot;iterm2-安装-sf-mono-字体&quot;&gt;iTerm2 安装 SF Mono 字体&lt;/h1&gt;

&lt;p&gt;细看 iTerm2 和 mac 自带的 Terminal 总感觉哪里不对，前者少点灵魂。&lt;/p&gt;

&lt;p&gt;最后发现，应该是字体问题，查看 Terminal 所用字体，为 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SF Mono&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;779&quot; alt=&quot;Man Page&quot; src=&quot;https://user-images.githubusercontent.com/3783096/93361208-2ee86400-f877-11ea-9eb5-1dd13d72c6e4.png&quot; /&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;mac 自带 Terminal 的设置&lt;/p&gt;

&lt;p&gt;这就简单了，但当我准备去 iTerm2 字段设成一样时，发现候选中并没有该字体。&lt;/p&gt;

&lt;p&gt;原来该字体为 Terminal 自带，不在系统 字体里。&lt;/p&gt;

&lt;p&gt;接下来的工作就是把它复制出来，安装到系统字体中，这样 iTerm2 就能适用上了。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /Applications/Utilities/Terminal.app/Contents/Resources/Fonts/
&lt;span class=&quot;nb&quot;&gt;cp&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.otf ~/Library/Fonts/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果发现无法直接 cd 进入 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/Applications/Utilities/Terminal.app/Contents&lt;/code&gt;，可手动去 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/Applications/Utilities/&lt;/code&gt; 找到 Terminal.app，右键 “Show Package Contents”。&lt;/p&gt;

&lt;h2 id=&quot;相关资源&quot;&gt;相关资源&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://gist.github.com/songouyang/ad044926f4db2df83a533766fc701afc&quot;&gt;iterm2安装 SF Mono 字体&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 16 Sep 2020 15:09:00 +0000</pubDate>
        <link>http://0.0.0.0:4000/2020/09/16/iTerm2-%E5%AE%89%E8%A3%85-SF-Mono-%E5%AD%97%E4%BD%93/</link>
        <guid isPermaLink="true">http://0.0.0.0:4000/2020/09/16/iTerm2-%E5%AE%89%E8%A3%85-SF-Mono-%E5%AD%97%E4%BD%93/</guid>
        
        
      </item>
    
      <item>
        <title>Nest 在日志中打印对象</title>
        <description>&lt;h1 id=&quot;nest-在日志中打印对象&quot;&gt;Nest 在日志中打印对象&lt;/h1&gt;

&lt;p&gt;Nest 自带的日志方法 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Logger.log&lt;/code&gt; 签名如下：&lt;/p&gt;

&lt;div class=&quot;language-ts highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?:&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isTimeDiffEnabled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;boolean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;只能通过指定期中的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;message&lt;/code&gt; 打印文本。&lt;/p&gt;

&lt;p&gt;所以它不能像原生的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;console.log&lt;/code&gt; 那样直接打印对象，比如：&lt;/p&gt;

&lt;div class=&quot;language-ts highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;var:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;someVariable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;但你可能会说，使用模板字符串就可以解决，像这样：&lt;/p&gt;

&lt;div class=&quot;language-ts highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;Logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`var: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;someVariable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;实际上得到的输出：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[1] [Nest] 24911   - 09/16/2020, 2:20:20 PM   var: [object Object] +0ms
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;所以为了正常打印对象，还需要借助 node 自带的 &lt;a href=&quot;https://nodejs.org/api/util.html#util_util_inspect_object_options&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;util.inspect&lt;/code&gt;&lt;/a&gt; 将对象拍平：&lt;/p&gt;

&lt;div class=&quot;language-ts highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;inspect&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;Logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`var: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inspect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;someVariable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 作为对照：&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;var:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;someVariable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;测试其输出：&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Nest] 24911   - 09/16/2020, 2:20:20 PM   var: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; blah: 1, foo: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; bar: &lt;span class=&quot;s1&quot;&gt;'xxx'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; +2282ms
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1] var: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; blah: 1, foo: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; bar: &lt;span class=&quot;s1&quot;&gt;'xxx'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;输出结果能够正常阅读了。&lt;/p&gt;

&lt;p&gt;借助于 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;inspect&lt;/code&gt;，可以统一收敛日志的打印，而不用在单独需要打印对象的场景切换到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;console.log&lt;/code&gt;，对于后面对日志作统一管理，打标签收集都有好处。&lt;/p&gt;

&lt;h2 id=&quot;相关资源&quot;&gt;相关资源&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://nodejs.org/api/util.html#util_util_inspect_object_options&quot;&gt;util.inspect(object[, options])&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 16 Sep 2020 14:09:00 +0000</pubDate>
        <link>http://0.0.0.0:4000/2020/09/16/Nest-%E5%9C%A8%E6%97%A5%E5%BF%97%E4%B8%AD%E6%89%93%E5%8D%B0%E5%AF%B9%E8%B1%A1/</link>
        <guid isPermaLink="true">http://0.0.0.0:4000/2020/09/16/Nest-%E5%9C%A8%E6%97%A5%E5%BF%97%E4%B8%AD%E6%89%93%E5%8D%B0%E5%AF%B9%E8%B1%A1/</guid>
        
        
      </item>
    
      <item>
        <title>iTerm2 设置的同步</title>
        <description>&lt;h1 id=&quot;iterm2-设置的同步&quot;&gt;iTerm2 设置的同步&lt;/h1&gt;

&lt;p&gt;新设备或重装之后，需要快速恢复之前的 iTerm2 设置。&lt;/p&gt;

&lt;p&gt;可以配置 iTerm2 将设置保存到文件，将文件保存到远端或复制到新机器后，就可以方便地恢复 iTerm2 的设置。&lt;/p&gt;

&lt;h2 id=&quot;配置的保存&quot;&gt;配置的保存&lt;/h2&gt;

&lt;p&gt;首先需要将现有的配置导出到文件。&lt;/p&gt;

&lt;p&gt;操作路径：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Preferences&lt;/li&gt;
  &lt;li&gt;General&lt;/li&gt;
  &lt;li&gt;Preferences&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/3783096/93177628-b04fd180-f765-11ea-8839-9126261fc8f4.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;iTerm2 设置&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;勾选 「Load preferences from a custom folder or URL」&lt;/li&gt;
  &lt;li&gt;指定保存配置的位置&lt;/li&gt;
  &lt;li&gt;指定保存位置后，会询问是否将现有配置复制到文件，在弹出的对话框中选择「Copy」&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/3783096/93177650-b645b280-f765-11ea-8470-0d95a38f5c1e.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;复制 iTerm2 配置到文件&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;这样就会得到一个配置文件 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.config/item2/com.googlecode.iterm2.plist&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;配置的恢复&quot;&gt;配置的恢复&lt;/h2&gt;

&lt;p&gt;讲道理，新环境下，配置 iTerm2 从包含上述 plist 配置的目录加载即可。亲测没没成功，不过通过命令行的方式成功了。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;将上述配置保存到一个位置，比如 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.config/iterm2&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;打开自带的 Terminal 执行如下命令：&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 配置 iTerm2 从目录加载配置&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;defaults write com.googlecode.iterm2.plist PrefsCustomFolder &lt;span class=&quot;nt&quot;&gt;-string&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;~/.config/iterm2&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 读取配置&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;defaults write com.googlecode.iterm2.plist LoadPrefsFromCustomFolder &lt;span class=&quot;nt&quot;&gt;-bool&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;启动 iTerm2，此时就会应用上期望的配置了。&lt;/p&gt;

&lt;h2 id=&quot;相关资源&quot;&gt;相关资源&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://stratus3d.com/blog/2015/02/28/sync-iterm2-profile-with-dotfiles-repository/&quot;&gt;Sync iTerm2 Profile With Dotfiles Repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Tue, 15 Sep 2020 14:09:00 +0000</pubDate>
        <link>http://0.0.0.0:4000/2020/09/15/iTerm2-%E8%AE%BE%E7%BD%AE%E7%9A%84%E5%90%8C%E6%AD%A5/</link>
        <guid isPermaLink="true">http://0.0.0.0:4000/2020/09/15/iTerm2-%E8%AE%BE%E7%BD%AE%E7%9A%84%E5%90%8C%E6%AD%A5/</guid>
        
        
      </item>
    
      <item>
        <title>锁定项目的 node 版本</title>
        <description>&lt;h1 id=&quot;锁定项目的-node-版本&quot;&gt;锁定项目的 node 版本&lt;/h1&gt;

&lt;p&gt;一些老项目对 node 版本是有要求的，往往使用默认的新版本包安装不上，scripts 也跑不起来。&lt;/p&gt;

&lt;p&gt;之前就遇到过运行一个小程序项目时，根据文档来，第一步安装就出错。本着办法总比问题多的理念，来一个解决一个。问题还真是一个接一个的出现。折腾头天，在解决一个包的运行问题时，发现切换到较低版本的 node 后一切安好。&lt;/p&gt;

&lt;p&gt;所以，对于老项目，最好使用兼容性强的版本 8 或 10 的 LTS。&lt;/p&gt;

&lt;p&gt;解决问题的根本方法是项目中要对 node 版本进行提示或锁死，否则新人仍会踩坑。&lt;/p&gt;

&lt;h2 id=&quot;nvmrc&quot;&gt;.nvmrc&lt;/h2&gt;

&lt;p&gt;在项目根目录添加 .nvmrc 文件可指定 nvm 默认的 node 版本。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;node &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; .nvmrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在执行 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nvm use&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nvm install&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nvm exec&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nvm run&lt;/code&gt; 或 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nvm which&lt;/code&gt; 这些命令时，都会从该文件读取版本信息。&lt;/p&gt;

&lt;p&gt;在新的环境下，clone 项目后通过 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nvm install &amp;amp;&amp;amp; nvm use&lt;/code&gt; 就可使用上与项目相匹配的 node 版本。&lt;/p&gt;

&lt;h2 id=&quot;engines&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;engines&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;通过在 package.json 中指定 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;engines&lt;/code&gt; 字段，可限定项目使用的 node 版本，甚至 npm 版本。&lt;/p&gt;

&lt;p&gt;不过，通常情况下，配置之后你会发现，该字段只对 yarn 生效：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ yarn
yarn install v1.22.5
info No lockfile found.
[1/5] 🔍  Validating package.json...
error test-node@1.0.0: The engine &quot;node&quot; is incompatible with this module. Expected version &quot;&amp;gt;=14&quot;. Got &quot;10.22.0&quot;
error Found incompatible module.
info Visit https://yarnpkg.com/en/docs/cli/install for documentation about this command.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;而使用 npm 进行安装时，直接成功没有提示，连 warnning 都没有：&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;npm i
npm WARN test-node@1.0.0 No description
npm WARN test-node@1.0.0 No repository field.

up to &lt;span class=&quot;nb&quot;&gt;date &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;0.48s
found 0 vulnerabilities
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;根据 npm 文档中关于 &lt;a href=&quot;https://docs.npmjs.com/files/package.json#engines&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;engines&lt;/code&gt;&lt;/a&gt; 的部分，发现要让 npm 识别 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;engines&lt;/code&gt; 字段，还需要配置 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;engine-strict: true&lt;/code&gt;，但是进一步看，&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;This feature was removed in npm 3.0.0&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;王德发？&lt;/p&gt;

&lt;p&gt;好消息是，进一步研究发现，创建 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.npmrc&lt;/code&gt; 文件配置如下内容：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;engine-strict = true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;就可以使得 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;engines&lt;/code&gt; 字段对 npm 生效了。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;npm i
npm ERR! code ENOTSUP
npm ERR! notsup Unsupported engine &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;test-node@1.0.0: wanted: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;node&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;&amp;gt;=14&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;current: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;node&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;10.22.0&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;npm&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;6.14.6&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
npm ERR! notsup Not compatible with your version of node/npm: test-node@1.0.0
npm ERR! notsup Not compatible with your version of node/npm: test-node@1.0.0
npm ERR! notsup Required: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;node&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;&amp;gt;=14&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
npm ERR! notsup Actual:   &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;npm&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;6.14.6&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;node&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;10.22.0&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

npm ERR! A &lt;span class=&quot;nb&quot;&gt;complete &lt;/span&gt;log of this run can be found &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;:
npm ERR!     /Users/wayongliu/.npm/_logs/2020-09-14T13_43_33_020Z-debug.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;结合之前关于&lt;a href=&quot;https://github.com/wayou/wayou.github.io/issues/229&quot;&gt;项目中私有 npm 源的设置&lt;/a&gt;，所以在项目中添加 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.npmrc&lt;/code&gt; 真的是最佳实践了。&lt;/p&gt;

&lt;h2 id=&quot;相关资源&quot;&gt;相关资源&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/nvm-sh/nvm#nvmrc&quot;&gt;.nvmrc&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.npmjs.com/files/package.json#engines&quot;&gt;npm package.json engines&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://wawand.co/blog/posts/tip-ensuring-yarn/&quot;&gt;TIP: Ensuring your team uses YARN/NPM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Mon, 14 Sep 2020 14:09:00 +0000</pubDate>
        <link>http://0.0.0.0:4000/2020/09/14/%E9%94%81%E5%AE%9A%E9%A1%B9%E7%9B%AE%E7%9A%84-node-%E7%89%88%E6%9C%AC/</link>
        <guid isPermaLink="true">http://0.0.0.0:4000/2020/09/14/%E9%94%81%E5%AE%9A%E9%A1%B9%E7%9B%AE%E7%9A%84-node-%E7%89%88%E6%9C%AC/</guid>
        
        
      </item>
    
      <item>
        <title>Mac 设置任意开机密码</title>
        <description>&lt;h1 id=&quot;mac-设置任意开机密码&quot;&gt;Mac 设置任意开机密码&lt;/h1&gt;

&lt;p&gt;默认情况下，系统对开机密码有长度要求，最少 6 位。&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;409&quot; alt=&quot;Screen Shot 2020-01-23 at 11 24 04&quot; src=&quot;https://user-images.githubusercontent.com/3783096/72954566-bd354480-3dd3-11ea-88ec-196ae28c2961.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如果不想受这个限制，可命令行执行如下命令：&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pwpolicy &lt;span class=&quot;nt&quot;&gt;-clearaccountpolicies&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;再次设置时，便可设置任意长度的密码了。&lt;/p&gt;

&lt;h2 id=&quot;相关资源&quot;&gt;相关资源&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://apple.stackexchange.com/questions/337468/how-to-set-short-user-password-macos-mojave/345994#345994&quot;&gt;How to set short user password macOS Mojave &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 12 Sep 2020 04:09:00 +0000</pubDate>
        <link>http://0.0.0.0:4000/2020/09/12/Mac-%E8%AE%BE%E7%BD%AE%E4%BB%BB%E6%84%8F%E5%BC%80%E6%9C%BA%E5%AF%86%E7%A0%81/</link>
        <guid isPermaLink="true">http://0.0.0.0:4000/2020/09/12/Mac-%E8%AE%BE%E7%BD%AE%E4%BB%BB%E6%84%8F%E5%BC%80%E6%9C%BA%E5%AF%86%E7%A0%81/</guid>
        
        
      </item>
    
      <item>
        <title>项目中私有 npm 源的设置</title>
        <description>&lt;h1 id=&quot;项目中私有-npm-源的设置&quot;&gt;项目中私有 npm 源的设置&lt;/h1&gt;

&lt;p&gt;npm 源的设置比较粗暴的方式是直接配置 npm 或 yarn，&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;npm
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ npm config set registry &amp;lt;registry url&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;yarn&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yarn config set registry &amp;lt;registry url&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;但这会影响所有包的安装，如果只是为了某些包需要从私有源安装，比如 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@scopename&lt;/code&gt; 下的所有包，可以单独配置该 scope 走私有源，其他包走正常的源安装。&lt;/p&gt;

&lt;p&gt;项目中创建配置文件，npm 和 yarn 分别为：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.npmrc&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@scopename:registry=&amp;lt;registry url&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.yarnrc&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot;@scopename:registry&quot; &quot;&amp;lt;registry url&amp;gt;&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;源的配置通过配置文件来设置，跟随项目，&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;好处是将变更依赖收敛到了项目中，不依赖全局的配置，&lt;/li&gt;
  &lt;li&gt;同时也不影响其他项目,&lt;/li&gt;
  &lt;li&gt;你甚至能为不同的 scope 指定不同的 registry，达到多个 registry 同时工作的目的&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 10 Sep 2020 15:09:00 +0000</pubDate>
        <link>http://0.0.0.0:4000/2020/09/10/%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%A7%81%E6%9C%89-npm-%E6%BA%90%E7%9A%84%E8%AE%BE%E7%BD%AE/</link>
        <guid isPermaLink="true">http://0.0.0.0:4000/2020/09/10/%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%A7%81%E6%9C%89-npm-%E6%BA%90%E7%9A%84%E8%AE%BE%E7%BD%AE/</guid>
        
        
      </item>
    
  </channel>
</rss>
