I"k<h1 id="killall-中的-signal">killall 中的 signal</h1>

<p>Flutter 开发时，会遇到另的任务挂起导致新的 Dart 服务无法启动的问题，提示如下：</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Waiting <span class="k">for </span>another flutter <span class="nb">command </span>to release the startup lock...
</code></pre></div></div>

<h2 id="killall-命令">killall 命令</h2>

<p>此时可以通过以下命令，将所有当前运行的 Dart 服务先结束掉：</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>killall <span class="nt">-9</span> dart
</code></pre></div></div>

<h2 id="signal-参数">SIGNAL 参数</h2>

<p>这里的 <code class="language-plaintext highlighter-rouge">-9</code> 指定的是 <code class="language-plaintext highlighter-rouge">killall -SIGNAL</code> 中的 <code class="language-plaintext highlighter-rouge">SIGNAL</code> 参数，可用的 SIGNAL 参数可通过 <code class="language-plaintext highlighter-rouge">killall -l</code> 列出：</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>killall <span class="nt">-l</span>
HUP INT QUIT ILL TRAP ABRT EMT FPE KILL BUS SEGV SYS PIPE ALRM TERM URG STOP
TSTP CONT CHLD TTIN TTOU IO XCPU XFSZ VTALRM PROF WINCH INFO USR1 USR2
</code></pre></div></div>

<p>可以看到这里列出的是各种信号的名称，每个名称根据其顺序对应了一个数字，所以指定 <code class="language-plaintext highlighter-rouge">-SIGNAL</code> 参数时，除了使用数字，也可以直接使用这里列出的名称。</p>

<p>名称和数字的对应关系在这里不直观，可通过 <code class="language-plaintext highlighter-rouge">man signal</code> 来查看：</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>man signal
...
     No    Name         Default Action       Description
     1     SIGHUP       terminate process    terminal line hangup
     2     SIGINT       terminate process    interrupt program
     3     SIGQUIT      create core image    quit program
     4     SIGILL       create core image    illegal instruction
     5     SIGTRAP      create core image    trace <span class="nb">trap
     </span>6     SIGABRT      create core image    abort program <span class="o">(</span>formerly SIGIOT<span class="o">)</span>
     7     SIGEMT       create core image    emulate instruction executed
     8     SIGFPE       create core image    floating-point exception
     9     SIGKILL      terminate process    <span class="nb">kill </span>program
     10    SIGBUS       create core image    bus error
     11    SIGSEGV      create core image    segmentation violation
     12    SIGSYS       create core image    non-existent system call invoked
     13    SIGPIPE      terminate process    write on a pipe with no reader
     14    SIGALRM      terminate process    real-time timer expired
     15    SIGTERM      terminate process    software termination signal
     16    SIGURG       discard signal       urgent condition present on socket
     17    SIGSTOP      stop process         stop <span class="o">(</span>cannot be caught or ignored<span class="o">)</span>
     18    SIGTSTP      stop process         stop signal generated from keyboard
     19    SIGCONT      discard signal       <span class="k">continue </span>after stop
     20    SIGCHLD      discard signal       child status has changed
     21    SIGTTIN      stop process         background <span class="nb">read </span>attempted from con-
                                             trol terminal
     22    SIGTTOU      stop process         background write attempted to con-
                                             trol terminal
     23    SIGIO        discard signal       I/O is possible on a descriptor <span class="o">(</span>see
                                             fcntl<span class="o">(</span>2<span class="o">))</span>
     24    SIGXCPU      terminate process    cpu <span class="nb">time </span>limit exceeded <span class="o">(</span>see
                                             setrlimit<span class="o">(</span>2<span class="o">))</span>
     25    SIGXFSZ      terminate process    file size limit exceeded <span class="o">(</span>see
                                             setrlimit<span class="o">(</span>2<span class="o">))</span>
     26    SIGVTALRM    terminate process    virtual <span class="nb">time </span>alarm <span class="o">(</span>see
                                             setitimer<span class="o">(</span>2<span class="o">))</span>
     27    SIGPROF      terminate process    profiling timer alarm <span class="o">(</span>see
                                             setitimer<span class="o">(</span>2<span class="o">))</span>
     28    SIGWINCH     discard signal       Window size change
     29    SIGINFO      discard signal       status request from keyboard
     30    SIGUSR1      terminate process    User defined signal 1
     31    SIGUSR2      terminate process    User defined signal 2
...
</code></pre></div></div>

<h2 id="signal-的用途">SIGNAL 的用途</h2>

<p>程序被终止时，是可以根据外部传来的信号判断出终止的原因，从而在业务上进行合理的善后工作。结束程序时，默认会发送 <code class="language-plaintext highlighter-rouge">SIGTERM</code> 信号，而 <code class="language-plaintext highlighter-rouge">killall</code> 时，通过手动指定相应的信号，可以让程序合理的响应。</p>

:ET