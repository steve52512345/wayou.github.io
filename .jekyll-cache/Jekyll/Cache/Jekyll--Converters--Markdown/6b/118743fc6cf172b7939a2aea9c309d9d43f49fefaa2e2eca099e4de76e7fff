I"WJ<h1 id="javascript-实现页面中录音功能">JavaScript 实现页面中录音功能</h1>

<p>页面中实现录音需要使用浏览器提供的 <a href="https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder">Media​Recorder</a> API，所以前提是需要浏览器支持 <a href="https://w3c.github.io/mediacapture-record/#MediaRecorderAPI">MediaStream Recording</a> 相关的功能。</p>

<p>以下代码默认工作在 Chrome 环境中。</p>

<h2 id="准备页面">准备页面</h2>

<p>首先准备一个页面，其中内容很简单，一个录音按钮，一个用于播放的 <code class="language-plaintext highlighter-rouge">&lt;audio&gt;</code> 标签。</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html</span> <span class="na">lang=</span><span class="s">"en"</span><span class="nt">&gt;</span>
<span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">charset=</span><span class="s">"UTF-8"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">"viewport"</span> <span class="na">content=</span><span class="s">"width=device-width, initial-scale=1.0"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">"X-UA-Compatible"</span> <span class="na">content=</span><span class="s">"ie=edge"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;title&gt;</span>audio record<span class="nt">&lt;/title&gt;</span>
<span class="nt">&lt;/head&gt;</span>
<span class="nt">&lt;body&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"app"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;button</span> <span class="na">class=</span><span class="s">"record-btn"</span><span class="nt">&gt;</span>record<span class="nt">&lt;/button&gt;</span>
        <span class="nt">&lt;audio</span> <span class="na">controls</span> <span class="na">class=</span><span class="s">"audio-player"</span><span class="nt">&gt;&lt;/audio&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"./recorder.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre></div></div>

<h2 id="获取录音权限">获取录音权限</h2>

<p>因为录音需要使用设备的话筒，所以第一步应该是向用户索要录音的权限。这是通过 <a href="https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia"><code class="language-plaintext highlighter-rouge">Media​Devices​.get​User​Media()</code></a> 来完成的，其用法为：</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">promise</span> <span class="o">=</span> <span class="nb">navigator</span><span class="p">.</span><span class="nx">mediaDevices</span><span class="p">.</span><span class="nx">getUserMedia</span><span class="p">(</span><span class="nx">constraints</span><span class="p">);</span>
</code></pre></div></div>

<p>其中 <a href="https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia#Parameters"><code class="language-plaintext highlighter-rouge">constraints</code></a> 为需要获取的权限列表，这里只需要指定音频 <code class="language-plaintext highlighter-rouge">audio</code> 即可。</p>

<p>其返回是个 Promise，因为用户何时进行授权是不确定的。通过在 Promise 的回调中进行授权成功或失败的处理。</p>

<p>在使用前需要判断浏览器是否已经支持相应的 API，此时得到如下的代码：</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="p">(</span><span class="nb">navigator</span><span class="p">.</span><span class="nx">mediaDevices</span><span class="p">.</span><span class="nx">getUserMedia</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="nx">constraints</span> <span class="o">=</span> <span class="p">{</span> <span class="na">audio</span><span class="p">:</span> <span class="kc">true</span> <span class="p">};</span>
  <span class="nb">navigator</span><span class="p">.</span><span class="nx">mediaDevices</span><span class="p">.</span><span class="nx">getUserMedia</span><span class="p">(</span><span class="nx">constraints</span><span class="p">).</span><span class="nx">then</span><span class="p">(</span>
    <span class="nx">stream</span> <span class="o">=&gt;</span> <span class="p">{</span>
      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">授权成功！</span><span class="dl">"</span><span class="p">);</span>
    <span class="p">},</span>
    <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
      <span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="dl">"</span><span class="s2">授权失败！</span><span class="dl">"</span><span class="p">);</span>
    <span class="p">}</span>
  <span class="p">);</span>
<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="dl">"</span><span class="s2">浏览器不支持 getUserMedia</span><span class="dl">"</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p>其中成功回调里得到的入参 <code class="language-plaintext highlighter-rouge">stream</code> 为 <a href="https://developer.mozilla.org/en-US/docs/Web/API/MediaStream"><code class="language-plaintext highlighter-rouge">MediaStream</code></a> 对象。</p>

<p>此时运行后可看到浏览器展示出了让用户授权使用麦克风的提示。</p>

<p><img src="https://user-images.githubusercontent.com/3783096/58750750-a484c100-84c8-11e9-9785-94746d98dbd5.png" alt="向用户索要麦克风使用权限" /></p>
<p align="center">向用户索要麦克风使用权限</p>

<h2 id="创建录音实例">创建录音实例</h2>

<p>将上一步获取到的 <a href="https://developer.mozilla.org/en-US/docs/Web/API/MediaStream"><code class="language-plaintext highlighter-rouge">MediaStream</code></a> 传入 <a href="https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder">Media​Recorder</a> 的构造器创建一个录音器的实例。</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">mediaRecorder</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">MediaRecorder</span><span class="p">(</span><span class="nx">stream</span><span class="p">);</span>
</code></pre></div></div>

<h2 id="启动录音">启动录音</h2>

<p>通过监听页面中录音按钮的点击来启动录音。</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">recordBtn</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="dl">"</span><span class="s2">.record-btn</span><span class="dl">"</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">mediaRecorder</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">MediaRecorder</span><span class="p">(</span><span class="nx">stream</span><span class="p">);</span>
<span class="nx">recordBtn</span><span class="p">.</span><span class="nx">onclick</span> <span class="o">=</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="nx">mediaRecorder</span><span class="p">.</span><span class="nx">start</span><span class="p">();</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">录音中...</span><span class="dl">"</span><span class="p">);</span>
<span class="p">};</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">MediaRecorder</code> 实例上有个 <a href="https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/state"><code class="language-plaintext highlighter-rouge">state</code></a> 状态，可用来判断录音器当前的活动状态，总共有三种值：</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">inactive</code>：处于休息状态，要么是没开始，要么是开始后已经停止。</li>
  <li><code class="language-plaintext highlighter-rouge">recording</code>：录音中</li>
  <li><code class="language-plaintext highlighter-rouge">paused</code>：已经开始，但被暂停了，不是停止也没有被恢复。</li>
</ul>

<p>所以通过这个状态，我们可以实现再次点击按钮时，结束录音。</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">recordBtn</span><span class="p">.</span><span class="nx">onclick</span> <span class="o">=</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="k">if</span> <span class="p">(</span><span class="nx">mediaRecorder</span><span class="p">.</span><span class="nx">state</span> <span class="o">===</span> <span class="dl">"</span><span class="s2">recording</span><span class="dl">"</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">mediaRecorder</span><span class="p">.</span><span class="nx">stop</span><span class="p">();</span>
    <span class="nx">recordBtn</span><span class="p">.</span><span class="nx">textContent</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">record</span><span class="dl">"</span><span class="p">;</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">录音结束</span><span class="dl">"</span><span class="p">);</span>
  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
    <span class="nx">mediaRecorder</span><span class="p">.</span><span class="nx">start</span><span class="p">();</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">录音中...</span><span class="dl">"</span><span class="p">);</span>
    <span class="nx">recordBtn</span><span class="p">.</span><span class="nx">textContent</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">stop</span><span class="dl">"</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">录音器状态：</span><span class="dl">"</span><span class="p">,</span> <span class="nx">mediaRecorder</span><span class="p">.</span><span class="nx">state</span><span class="p">);</span>
<span class="p">};</span>
</code></pre></div></div>

<h2 id="音频数据的获取">音频数据的获取</h2>

<p>上面按钮处理来自用户的交互，只负责启动或停止录音。音频的数据还是从 <a href="https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder">Media​Recorder</a> 实例上通过监听其相应的事件来完成的。</p>

<p>当录音开始时，会触发其 <a href="https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/ondataavailable"><code class="language-plaintext highlighter-rouge">MediaRecorder.ondataavailable</code></a> 事件，从该事件回调的入参为 <a href="https://developer.mozilla.org/en-US/docs/Web/API/BlobEvent"><code class="language-plaintext highlighter-rouge">BlobEvent</code></a>，从它身上取到 <a href="https://developer.mozilla.org/en-US/docs/Web/API/BlobEvent/data"><code class="language-plaintext highlighter-rouge">event.data</code></a> 便是我们需要的音频数据。因为数据是一段一段产生的，所以需要暂存到一个数组中。</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">chunks</span> <span class="o">=</span> <span class="p">[];</span>
<span class="nx">mediaRecorder</span><span class="p">.</span><span class="nx">ondataavailable</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">chunks</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">data</span><span class="p">);</span>
<span class="p">};</span>
</code></pre></div></div>

<p>目前为止完成的代码应该是这样的：</p>

<details>
<summary>
recorder.js
</summary>

```js
const recordBtn = document.querySelector(".record-btn");
const playBtn = document.querySelector(".play-btn");

if (navigator.mediaDevices.getUserMedia) {
  var chunks = [];
  const constraints = { audio: true };
  navigator.mediaDevices.getUserMedia(constraints).then(
    stream =&gt; {
      console.log("授权成功！");

      const mediaRecorder = new MediaRecorder(stream);

      recordBtn.onclick = () =&gt; {
        if (mediaRecorder.state === "recording") {
          mediaRecorder.stop();
          recordBtn.textContent = "record";
          console.log("录音结束");
        } else {
          mediaRecorder.start();
          console.log("录音中...");
          recordBtn.textContent = "stop";
        }
        console.log("录音器状态：", mediaRecorder.state);
      };

      mediaRecorder.ondataavailable = function(e) {
        chunks.push(e.data);
      };
    },
    () =&gt; {
      console.error("授权失败！");
    }
  );
} else {
  console.error("浏览器不支持 getUserMedia");
}
```

</details>

<p><img src="https://user-images.githubusercontent.com/3783096/58750759-c0886280-84c8-11e9-9c8f-154a1fafc959.gif" alt="录音状态的查看" /></p>
<p align="center">录音状态的查看</p>

<h2 id="录音结束及音频的播放">录音结束及音频的播放</h2>

<p>通过监听 <a href="https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/onstop"><code class="language-plaintext highlighter-rouge">MediaRecorder.onstop</code></a> 事件，将收集好的音频数据创建成 <a href="https://developer.mozilla.org/en/docs/Web/API/Blob">Blob 对象</a>，然后 通过 <a href="https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL"><code class="language-plaintext highlighter-rouge">URL.createObjectURL</code></a> 创建成 HTML 中 <code class="language-plaintext highlighter-rouge">&lt;audio&gt;</code> 标签可使用的资源链接。</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">mediaRecorder</span><span class="p">.</span><span class="nx">onstop</span> <span class="o">=</span> <span class="nx">e</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="kd">var</span> <span class="nx">blob</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Blob</span><span class="p">(</span><span class="nx">chunks</span><span class="p">,</span> <span class="p">{</span> <span class="na">type</span><span class="p">:</span> <span class="dl">"</span><span class="s2">audio/ogg; codecs=opus</span><span class="dl">"</span> <span class="p">});</span>
  <span class="nx">chunks</span> <span class="o">=</span> <span class="p">[];</span>
  <span class="kd">var</span> <span class="nx">audioURL</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">URL</span><span class="p">.</span><span class="nx">createObjectURL</span><span class="p">(</span><span class="nx">blob</span><span class="p">);</span>
  <span class="nx">audio</span><span class="p">.</span><span class="nx">src</span> <span class="o">=</span> <span class="nx">audioURL</span><span class="p">;</span>
<span class="p">};</span>
</code></pre></div></div>

<p>其中，在使用完收到到的音频数据后，将 <code class="language-plaintext highlighter-rouge">chunks</code> 置空方便下次录音时使用。</p>

<p>目前为止完成的代码应该是这样的：</p>

<details>
<summary>
recorder.js
</summary>

```js
const recordBtn = document.querySelector(".record-btn");
const player = document.querySelector(".audio-player");

if (navigator.mediaDevices.getUserMedia) {
  var chunks = [];
  const constraints = { audio: true };
  navigator.mediaDevices.getUserMedia(constraints).then(
    stream =&gt; {
      console.log("授权成功！");

      const mediaRecorder = new MediaRecorder(stream);

      recordBtn.onclick = () =&gt; {
        if (mediaRecorder.state === "recording") {
          mediaRecorder.stop();
          recordBtn.textContent = "record";
          console.log("录音结束");
        } else {
          mediaRecorder.start();
          console.log("录音中...");
          recordBtn.textContent = "stop";
        }
        console.log("录音器状态：", mediaRecorder.state);
      };

      mediaRecorder.ondataavailable = e =&gt; {
        chunks.push(e.data);
      };

      mediaRecorder.onstop = e =&gt; {
        var blob = new Blob(chunks, { type: "audio/ogg; codecs=opus" });
        chunks = [];
        var audioURL = window.URL.createObjectURL(blob);
        player.src = audioURL;
      };
    },
    () =&gt; {
      console.error("授权失败！");
    }
  );
} else {
  console.error("浏览器不支持 getUserMedia");
}
```

</details>

<h2 id="运行">运行</h2>

<p>完成上面步骤后，实现了一个简单的录音功能，可通过<a href="https://wayou.github.io/audio-recorder/index.html">此地址</a>在线体验。完整的代码可在仓库<a href="https://github.com/wayou/audio-recorder"> wayou/audio-recorder</a> 中获取到。</p>

<h2 id="相关资源">相关资源</h2>

<ul>
  <li><a href="https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder">Media​Recorder</a></li>
  <li><a href="https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/onstop"><code class="language-plaintext highlighter-rouge">MediaRecorder.onstop</code></a></li>
  <li><a href="https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL"><code class="language-plaintext highlighter-rouge">URL.createObjectURL</code></a></li>
</ul>

:ET