I"Y<h1 id="内容协商-content-nagotiation">内容协商/ Content Nagotiation</h1>

<p>访问同一个 URI 时，服务器可以返回不同类型的资源。比如在浏览器中访问 <code class="language-plaintext highlighter-rouge">http://www.example.com/user</code> 可以是个网页，也可以是个 JSON 接口，甚至可以是张图片等。</p>

<p>具体返回哪种类型，就需要引入内容协商的机制，以达到返回正确资源类型的目的。</p>

<p>内容协商分为服务器主导（server driven）和客户端主导（agent-driven negotiation / reactive negotiation）两种方式。</p>

<p><img src="https://user-images.githubusercontent.com/3783096/76588210-6de0da00-6521-11ea-8c91-f7fd4b3268a2.png" alt="Resource on the server" /></p>
<p align="center">资源请求及返回过程 -- 图片来自 MDN</p>

<h2 id="服务器主导">服务器主导</h2>

<p><img src="https://user-images.githubusercontent.com/3783096/76588225-789b6f00-6521-11ea-99df-4bc2b13c43d5.png" alt="Resource on the server" /></p>
<p align="center">服务器主导的内容协商 -- 图片来自 MDN</p>

<p>端上面发送 <code class="language-plaintext highlighter-rouge">Accept</code> 请求头，列出期望的 MIME 类型，多种类型用逗号分隔，并且可为每种类型指定相应权值。</p>

<p>示例：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>GET /URL HTTP/1.1
Accept: text/*
Accept-Language: en
Accept-Encoding: br, gzip;q=0.8
</code></pre></div></div>

<p>常用端上发送的请求头有：</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">Accept</code>：指定接收的 MIME 类型</li>
  <li><code class="language-plaintext highlighter-rouge">Accept-Charset</code>：指定接收的文本编码，比如 utf-8</li>
  <li><code class="language-plaintext highlighter-rouge">Accept-Encoding</code>：指定压缩类型，比如 <code class="language-plaintext highlighter-rouge">br, gzip;q=0.8</code></li>
  <li><code class="language-plaintext highlighter-rouge">Accept-Language</code>：指定语言</li>
</ul>

<p>服务器通过返回 <code class="language-plaintext highlighter-rouge">Vary</code> 响应头告知客户端哪些 Header 被采用，如果返回的是 <code class="language-plaintext highlighter-rouge">*</code> 则表明还有除了请求头之外的其他因素加入到了决策中。该响应头主要为了方便端上面的缓存能够正常工作。</p>

<h2 id="客户端主导">客户端主导</h2>

<p><img src="https://user-images.githubusercontent.com/3783096/76588251-82bd6d80-6521-11ea-9566-336e12ba9ef2.png" alt="Resource on the semer" /></p>

<p align="center">客户端主导的内容协商 -- 图片来自 MDN</p>

<p>当 URI 对应多种资源时，服务器一并返回，由端上自行决定取哪个。</p>

<h2 id="总结">总结</h2>

<p>服务器主导其缺点如下：</p>

<ul>
  <li>客户端请求头会比较繁多和复杂，增加了带宽成本</li>
  <li>同时需要服务器去解析和处理相应决策逻辑，增加了服务器成本</li>
  <li>不够灵活，假如需要增加其他的协商条件，端上需要新增请求头，服务器也需要新增处理逻辑。</li>
  <li>请求头过多暴露的信息越多，会有安全隐患</li>
</ul>

<p>客户端主导缺点如下：</p>
<ul>
  <li>多了次请求</li>
  <li>HTTP 协议中并未规定用于客户端进行选择的格式，这部分实现不统一</li>
</ul>

<h2 id="相关资源">相关资源</h2>

<p>-<a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Content_negotiation">MDN - Content negotiation</a></p>

:ET