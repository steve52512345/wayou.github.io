I":<h1 id="微信小程序问题集锦">微信小程序问题集锦</h1>

<h3 id="0-canvas-绘制不生效">#<span>0 Canvas 绘制不生效</span></h3>

<p>原因有可能是 canvas context 的创建方式不对。</p>

<p>通过 <code class="language-plaintext highlighter-rouge">wx.createCanvasContext(canvasId, this)</code> 创建 canvas 绘图上下文时，第后个参数是指自定义组件的实例。如果 canvas 位于自定义组件中，这个参数是必传的，否则绘制不生效，界面没显示任何东西。</p>

<p>来看官方文档关于 <a href="https://developers.weixin.qq.com/miniprogram/dev/api/canvas/create-canvas-context.html">wx.createCanvasContext</a> 的介绍：</p>

<blockquote>
  <p>自定义组件实例 this ，表示在这个自定义组件下查找拥有 canvas-id 的 <canvas></canvas> ，<strong>如果省略，则不在任何自定义组件内查找</strong></p>
</blockquote>

<p><em>components/paint.json</em></p>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"component"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>
<p><br /></p>

<p><em>components/paint.js</em></p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">Component</span><span class="p">({</span>
  <span class="na">ready</span><span class="p">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="nx">ctx</span> <span class="o">=</span> <span class="nx">wx</span><span class="p">.</span><span class="nx">createCanvasContext</span><span class="p">(</span><span class="dl">"</span><span class="s2">myCanvas</span><span class="dl">"</span><span class="p">,</span> <span class="k">this</span> <span class="cm">/* 它很重要 */</span><span class="p">);</span>

    <span class="nx">ctx</span><span class="p">.</span><span class="nx">setFontSize</span><span class="p">(</span><span class="mi">20</span><span class="p">);</span>
    <span class="nx">ctx</span><span class="p">.</span><span class="nx">fillText</span><span class="p">(</span><span class="dl">"</span><span class="s2">Hello</span><span class="dl">"</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">20</span><span class="p">);</span>
    <span class="nx">ctx</span><span class="p">.</span><span class="nx">fillText</span><span class="p">(</span><span class="dl">"</span><span class="s2">MINA</span><span class="dl">"</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span> <span class="mi">100</span><span class="p">);</span>

    <span class="nx">ctx</span><span class="p">.</span><span class="nx">draw</span><span class="p">();</span>
  <span class="p">}</span>
<span class="p">});</span>
</code></pre></div></div>

<h3 id="1--canvas-api-与-dom-中不一样">#<span>1  Canvas API 与 DOM 中不一样</span></h3>

<p>部分 API 与 DOM 中 canvas 有差异，体现在方法名与参数上。</p>

<p>比如 ：</p>

<p><code class="language-plaintext highlighter-rouge">context.createRadialGradient(x0, y0, r0, x1, y1, r1);</code>,</p>

<p>微信中我能找到对应的，至少从名称上来看，应该是 <code class="language-plaintext highlighter-rouge">context.createCircularGradient(x,y,r)</code></p>

<p>该 API 创建放射状的渐变，渐变由两个圓形边界确定。微信小程序中提供的对应 API 少了一个圆，一如文档中所说，起点从圆心开始。可以理解为缺少的那组参数所确定的圆，其圆心与外围圆心一致，只是半径为0。</p>

<p>像这种不与我们所熟知的 API 靠拢，进而设计出相近参数不同的 API，不太明白其用意和初衷。只是我们在写码时需要勤看文档，否则会困绕很久。</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">Component</span><span class="p">({</span>
  <span class="na">ready</span><span class="p">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="nx">ctx</span> <span class="o">=</span> <span class="nx">wx</span><span class="p">.</span><span class="nx">createCanvasContext</span><span class="p">(</span><span class="dl">"</span><span class="s2">myCanvas</span><span class="dl">"</span><span class="p">);</span>

    <span class="c1">// const grd = ctx.createRadialGradient(0, 0, 50, 75, 50, 50);</span>
    <span class="kd">const</span> <span class="nx">grd</span> <span class="o">=</span> <span class="nx">ctx</span><span class="p">.</span><span class="nx">createCircularGradient</span><span class="p">(</span><span class="mi">75</span><span class="p">,</span> <span class="mi">50</span><span class="p">,</span> <span class="mi">50</span><span class="p">);</span>

    <span class="nx">grd</span><span class="p">.</span><span class="nx">addColorStop</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="dl">"</span><span class="s2">red</span><span class="dl">"</span><span class="p">);</span>
    <span class="nx">grd</span><span class="p">.</span><span class="nx">addColorStop</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="dl">"</span><span class="s2">white</span><span class="dl">"</span><span class="p">);</span>

    <span class="c1">// Fill with gradient</span>
    <span class="nx">ctx</span><span class="p">.</span><span class="nx">setFillStyle</span><span class="p">(</span><span class="nx">grd</span><span class="p">);</span>
    <span class="nx">ctx</span><span class="p">.</span><span class="nx">fillRect</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">150</span><span class="p">,</span> <span class="mi">80</span><span class="p">);</span>
    <span class="nx">ctx</span><span class="p">.</span><span class="nx">draw</span><span class="p">();</span>
  <span class="p">}</span>
<span class="p">});</span>
</code></pre></div></div>

<h3 id="2-真机上图片绘制不生效">#<span>2 真机上图片绘制不生效</span></h3>

<p>与 DOM 中 canvas 的图片绘制不同，小程序提供于向画布绘制图片的 API <code class="language-plaintext highlighter-rouge">canvasContext.drawImage</code> 其所需的图片资源为图片的地址。</p>

<p>特别地，如果发现绘制后没展示，多半是因为绘制的图片来自远端，需要使用先下载到本地。这其实跟原生 DOM canvas 绘制网络图片时一样，先 <code class="language-plaintext highlighter-rouge">new Image()</code> 等加载完后在 <code class="language-plaintext highlighter-rouge">img.onload</code> 回调中再绘制。</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">wx</span><span class="p">.</span><span class="nx">downloadFile</span><span class="p">({</span>
    <span class="na">url</span><span class="p">:</span> <span class="dl">'</span><span class="s1">https://example.com/foo.jpg</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">success</span><span class="p">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
        <span class="kd">const</span> <span class="nx">ctx</span> <span class="o">=</span> <span class="nx">wx</span><span class="p">.</span><span class="nx">createCanvasContext</span><span class="p">(</span><span class="dl">'</span><span class="s1">myCanvas</span><span class="dl">'</span><span class="p">)</span>
        <span class="nx">ctx</span><span class="p">.</span><span class="nx">drawImage</span><span class="p">(</span><span class="nx">res</span><span class="p">.</span><span class="nx">tempFilePath</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">150</span><span class="p">,</span> <span class="mi">100</span><span class="p">)</span>
        <span class="nx">ctx</span><span class="p">.</span><span class="nx">draw</span><span class="p">()</span>
    <span class="p">}</span>
<span class="p">})</span>
</code></pre></div></div>

<p>因为小程序内对外部资源的使用的严格限制，这里使用 <code class="language-plaintext highlighter-rouge">wx.downloadFile</code> API 下载的图片地址需要添加到 <code class="language-plaintext highlighter-rouge">downloadFile 合法域名</code> 中。</p>

<h3 id="3-cover-view-中文本样式的兼容性问题">#<span>3 <code class="language-plaintext highlighter-rouge">cover-view</code> 中文本样式的兼容性问题</span></h3>

<p>像 <code class="language-plaintext highlighter-rouge">&lt;live-player&gt;</code> 这种运行时是 native 元素的组件，其上要盖东西有严格限制，可操作的空间不多，样式操控起来也捉襟见肘。</p>

<p>虽然官方文档说其只能嵌套 <code class="language-plaintext highlighter-rouge">&lt;cover-view&gt;</code> 和 <code class="language-plaintext highlighter-rouge">&lt;cover-image&gt;</code>，实测放入文本也是可以的。真机上发现视频上盖的文本在 iOS 与 安卓端样式上有差异。比如在视频上盖一个 「静音」标签。</p>

<p><em>mute_badge.wxml</em></p>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;live-player&gt;</span>
  <span class="nt">&lt;cover-view</span>
    <span class="na">class=</span><span class="s">"mute-badge"</span><span class="nt">&gt;</span>
    静音模式
  <span class="nt">&lt;/cover-view&gt;</span>
<span class="nt">&lt;/live-player&gt;</span>
</code></pre></div></div>

<p><em>mute_badge.wxss</em></p>
<div class="language-diff highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">.mute-badge</span> {
    color: #fff;
    background: rgba(0, 0, 0, 0.5);
    display: inline-block;
    vertical-align: top;
<span class="gi">+    padding: 0px 4px;
</span>    font-size: 24rpx;
    line-height: 48rpx;
    height: 48rpx;
    margin: 20rpx;
<span class="err">}</span>
</code></pre></div></div>
<p>因为想要文本与背景间有留白，所以左右给了 4px 间距。不给的话默认是紧贴着的。模拟器上没问题，真机测试问题便来了。</p>

<p>iOS 左右依然无留白，安卓正常。审查元素后可发现，iOS 中 padding 部分是没有背景色的！</p>

<p><img src="https://user-images.githubusercontent.com/3783096/44103313-708fa3d6-a01e-11e8-976c-46530fbe985d.png" alt="image" /></p>

<p>这决定了如果想要文字左右有边距，得靠东西来填充，靠看不见的字符。当然空格键打的空格是不会起作用的，会被忽略掉，好在 <code class="language-plaintext highlighter-rouge">\b</code> 是可以起到填充作用的。所以文案前后加 <code class="language-plaintext highlighter-rouge">\b</code>。</p>

<p><em>mute_badge.js</em></p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">data</span><span class="p">:{</span>
    <span class="nl">text</span><span class="p">:</span> <span class="s2">`\b\b 静音模式 \b\b`</span>
<span class="p">}</span>
</code></pre></div></div>

<p><em>mute_badge.wxml</em></p>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;live-player&gt;</span>
  <span class="nt">&lt;cover-view</span>
    <span class="na">class=</span><span class="s">"mute-badge"</span><span class="nt">&gt;</span>
    
  <span class="nt">&lt;/cover-view&gt;</span>
<span class="nt">&lt;/live-player&gt;</span>
</code></pre></div></div>

<p>这样 iOS 上是生效了。但安卓上出新问题了。因为 <code class="language-plaintext highlighter-rouge">\b</code> 在安卓上的表现是虽然会占空间，但不会撑开容器，所以容器还是文案那么宽，因为 <code class="language-plaintext highlighter-rouge">\b</code> 的加入，原来的文案便显示不下了，被挤掉了一部分。
￼
<img src="https://user-images.githubusercontent.com/3783096/44103283-612a001c-a01e-11e8-8b9e-bfa5f5f53e11.png" alt="image" /></p>

<p>如果想尝试文本外再包一层东西来写样式增加留白的话，会得到以下的结果：
￼
<img src="https://user-images.githubusercontent.com/3783096/44103262-52f3aef8-a01e-11e8-8886-0f0dd04dac59.png" alt="image" /></p>

<p>既然难两全，那就分开处理喽。</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">data</span><span class="p">:{</span>
<span class="nl">txt</span><span class="p">:</span><span class="err">’\</span><span class="nx">b</span><span class="err">\</span><span class="nx">b</span> <span class="nx">静音模式</span> <span class="err">\</span><span class="nx">b</span><span class="err">\</span><span class="nx">b</span><span class="err">’</span>
<span class="p">},</span>
<span class="nx">ready</span><span class="p">:</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">try</span> <span class="p">{</span>
            <span class="kd">const</span> <span class="nx">systemInfo</span> <span class="o">=</span> <span class="nx">wx</span><span class="p">.</span><span class="nx">getSystemInfoSync</span><span class="p">();</span>
            <span class="k">if</span> <span class="p">(</span><span class="nx">systemInfo</span><span class="p">.</span><span class="nx">platform</span> <span class="o">===</span> <span class="dl">'</span><span class="s1">android</span><span class="dl">'</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">this</span><span class="p">.</span><span class="nx">setData</span><span class="p">({</span>
                    <span class="na">txt</span><span class="p">:</span> <span class="dl">'</span><span class="s1">静音模式</span><span class="dl">'</span><span class="p">,</span>
                <span class="p">});</span>
            <span class="p">}</span>
        <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
            <span class="c1">//</span>
        <span class="p">}</span>
    <span class="p">}</span>
</code></pre></div></div>
:ET