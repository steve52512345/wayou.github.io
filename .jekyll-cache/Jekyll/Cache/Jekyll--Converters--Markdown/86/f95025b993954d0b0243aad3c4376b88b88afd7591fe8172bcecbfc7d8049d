I"g7<h1 id="创建-yarnnpm-脚手架快速生成项目">创建 Yarn/NPM 脚手架快速生成项目</h1>

<h2 id="背景">背景</h2>

<p><code class="language-plaintext highlighter-rouge">yarn create &lt;starter-kit-package&gt; [&lt;args&gt;]</code> 是为了统一前端项目脚手架引入的，这之前，各项目会有自己的方式和姿势来生成新项目。</p>

<p>这里，约定 <code class="language-plaintext highlighter-rouge">&lt;starter-kit-package&gt;</code> 为 <code class="language-plaintext highlighter-rouge">create-</code> 开头的 npm 包，通过 <a href="https://docs.npmjs.com/files/package.json#bin">package.json bin 字段</a>对外导出可执行命令用于创建新项目时执行。</p>

<p>当执行 <code class="language-plaintext highlighter-rouge">yarn create &lt;starter-kit-package&gt; [&lt;args&gt;]</code> 时，相当于执行 <code class="language-plaintext highlighter-rouge">yarn global add &lt;starter-kit-package&gt;</code>，只不过前者会自动调用 <code class="language-plaintext highlighter-rouge">&lt;starter-kit-package&gt;</code> 里的 bin 命令并透传 <code class="language-plaintext highlighter-rouge">args</code> 参数立即开始新项目的生成。</p>

<p>以 create-react-app 为例，生成项目可以这样：</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>yarn create react-app &lt;app-name&gt;
</code></pre></div></div>

<p>也可以这样：</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>yarn global add create-react-app
<span class="nv">$ </span>create-react-app &lt;app-name&gt;
</code></pre></div></div>

<h3 id="npm">npm</h3>

<p>npm 本身有一个 <code class="language-plaintext highlighter-rouge">init</code> 命令，用来快速创建 package.json 文件（yarn 对应的命令为 <code class="language-plaintext highlighter-rouge">yarn init</code>）。后期也加入了对 <code class="language-plaintext highlighter-rouge">create-</code> 脚手架的支持。</p>

<p>用法示例：</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm init foo -&gt; npx create-foo
npm init @usr/foo -&gt; npx @usr/create-foo
npm init @usr -&gt; npx @usr/create
</code></pre></div></div>

<h2 id="创建-create--开头的脚手架">创建 <code class="language-plaintext highlighter-rouge">create-</code> 开头的脚手架</h2>

<p>由上面可知，<code class="language-plaintext highlighter-rouge">create-</code> 开头的脚手架 npm 包实际上是一个对外导出了可执行文件的 npm 包，所以 package.json 中需要实现 <code class="language-plaintext highlighter-rouge">bin</code> 字段，这与平时使用的命令行工具比如 <a href="https://github.com/webpack/webpack/blob/b7f08b42b85f89e52facac426251d26ec64f2e6d/package.json#L106">Webpack</a> 别无二致。</p>

<p>所以 bin 字段中提供的命令就是脚手架与外界沟通的桥梁，外界通过调用该命令，传递参数，调起脚手架。脚手架执行命令，解析参数，执行项目的生成逻辑。</p>

<h3 id="添加示例代码">添加示例代码</h3>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">mkdir </span>create-hello <span class="o">&amp;&amp;</span> <span class="nb">cd</span> <span class="nv">$_</span>
<span class="nv">$ </span>yarn init <span class="nt">-y</span>
<span class="nv">$ </span><span class="nb">touch </span>index.js
</code></pre></div></div>

<p>index.js 中输入：</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#!/usr/bin/env node
</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">hello</span><span class="dl">'</span><span class="p">)</span>
</code></pre></div></div>

<p>作为 bin 命令入口的文件需要以 <code class="language-plaintext highlighter-rouge">#!/usr/bin/env node</code>  开头，作用是告诉系统使用什么环境来执行该脚本。</p>

<p>编辑 package.json 加入 bin 字段的配置，指向刚刚添加的 index.js</p>

<div class="language-diff highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">{</span>
  "name": "create-hello",
  "version": "1.0.0",
  "main": "index.js",
<span class="gi">+  "bin": {
+     "create-hello": "./index.js"
+ },
</span>  "license": "MIT"
<span class="err">}</span>
</code></pre></div></div>

<h3 id="link">link</h3>

<p>创建项目后，需要 link 到全局，这样才能本地测试，就像使用正式发布的 npm 包一样调用。</p>

<p>直接在当前目录下执行：</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>yarn <span class="nb">link 
</span>yarn <span class="nb">link </span>v1.22.4
success Registered <span class="s2">"create-hello"</span><span class="nb">.</span>
info You can now run <span class="sb">`</span>yarn <span class="nb">link</span> <span class="s2">"create-hello"</span><span class="sb">`</span> <span class="k">in </span>the projects where you want to use this package and it will be used instead.
✨  Done <span class="k">in </span>0.03s.
</code></pre></div></div>

<p>完成 link 后，yarn 会创建可执行命令到对应路径下，具体的路径可通过 <code class="language-plaintext highlighter-rouge">yarn global bin</code> 来查看，</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>yarn global bin
/usr/local/bin
</code></pre></div></div>

<p>然后查看该目录，可看到刚刚 link 成功的命令：</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>ll /usr/local/bin | <span class="nb">grep </span>create-hello                                                                                                                                                                                             19:56:26
lrwxr-xr-x  1 wayouliu  admin    63B May 13 18:02 create-hello -&gt; ../../../Users/wayouliu/.config/yarn/link/create-hello/index.js
</code></pre></div></div>

<h3 id="测试执行">测试执行</h3>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>yarn create hello                                                                                                                                                                                                                 19:56:31
yarn create v1.22.4
info Using linked package <span class="k">for</span> <span class="s2">"create-hello"</span><span class="nb">.</span>
/bin/sh: /usr/local/bin/create-hello: Permission denied
error Command failed.
Exit code: 126
Command: /usr/local/bin/create-hello
Arguments:
Directory: /Users/wayouliu/Documents/dev/tencent/test-tcnf
Output:

info Visit https://yarnpkg.com/en/docs/cli/create <span class="k">for </span>documentation about this command.
</code></pre></div></div>

<p>可以看到，并没有正常执行，提示权限问题。</p>

<p>真实原因是被 link 的入口文件其属性为非可执行，请看：</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>ll /usr/local/bin | <span class="nb">grep </span>create-hello                                                                                                                                                                                             19:56:26
lrwxr-xr-x  1 wayouliu  admin    63B May 13 18:02 create-hello -&gt; ../../../Users/wayouliu/.config/yarn/link/create-hello/index.js

<span class="nv">$ </span>ll /Users/wayouliu/.config/yarn/link/create-hello/index.js
total 16
<span class="nt">-rw-r--r--</span>  1 wayouliu  staff    43B May 13 17:57 index.js
<span class="nt">-rw-r--r--</span>  1 wayouliu  staff   145B May 13 18:01 package.json
</code></pre></div></div>

<p>这里生成到 <code class="language-plaintext highlighter-rouge">/usr/local/bin</code> 下的软链是 <code class="language-plaintext highlighter-rouge">x</code> 可执行的，但软链对应的实际文件，也就是项目中作为 bin 命令入口的 <code class="language-plaintext highlighter-rouge">index.js</code>，其属性不是 <code class="language-plaintext highlighter-rouge">x</code>。</p>

<p>解决办法是将其转一下：</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo chmod </span>0777  /Users/wayouliu/.config/yarn/link/create-hello/index.js
</code></pre></div></div>

<p>再次查看其文件属性已经变化 ：</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>ll /Users/wayouliu/.config/yarn/link/create-hello/index.js                                        21:22:56
<span class="nt">-rwxrwxrwx</span>  1 wayouliu  staff    43B May 13 17:57 /Users/wayouliu/.config/yarn/link/create-hello/index.js
</code></pre></div></div>

<p>现在便可正常执行了：</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>yarn create hello 
yarn create v1.22.4
info Using linked package <span class="k">for</span> <span class="s2">"create-hello"</span><span class="nb">.</span>
hello
✨  Done <span class="k">in </span>1.24s.
</code></pre></div></div>

<p>另，还有种情况，也需要进行如上 <code class="language-plaintext highlighter-rouge">chmod</code> 操作来解决，即虽然 link 成功后在 <code class="language-plaintext highlighter-rouge">/usr/local/bin</code> 下生成了命令，但因为文件不是可执行属性，有可能会报找不到命令的错误：</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fish: Unknown <span class="nb">command</span>: create-hello
</code></pre></div></div>

<h3 id="包含-scope-的情况">包含 scope 的情况</h3>

<p>对于包含 scope 的 npm 包，执行 <code class="language-plaintext highlighter-rouge">yarn create @foo/bar</code> 时，实际执行的是 <code class="language-plaintext highlighter-rouge">yarn global add @foo/create-bar</code>。</p>

<p>更新 package.json：</p>

<div class="language-diff highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">{</span>
-  "name": "create-hello",
<span class="gi">+  "name": "@tencent/create-hello",
</span>  "version": "1.0.0",
  "main": "index.js",
  "bin": {
      "create-hello": "./index.js"
   },
  "license": "MIT"
<span class="err">}</span>
</code></pre></div></div>

<p>执行 <code class="language-plaintext highlighter-rouge">yarn link</code> 重新 link。调试过程中难免多次进行 link 操作，所以如果之前已经 link 过同名包的话这里会失败，错误信息会类似下面这样：</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>yarn <span class="nb">link
</span>yarn <span class="nb">link </span>v1.22.4
warning There<span class="s1">'s already a package called "@tencent/create-hello" registered. This command has had no effect. If this command was run in another folder with the same name, the other folder is still linked. Please run yarn unlink in the other folder if you want to register this folder.
✨  Done in 0.03s.
</span></code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">yarn link</code> 生成的软链可以在 <code class="language-plaintext highlighter-rouge">~/.config/yarn/link</code> 目录找到，里面可看到所有 link 的包，通过 <code class="language-plaintext highlighter-rouge">yarn unlink</code> 可解决上面的告警。</p>

<h2 id="参数的处理">参数的处理</h2>

<p><code class="language-plaintext highlighter-rouge">yarn create &lt;starter-kit-package&gt; [&lt;args&gt;]</code> 中 <code class="language-plaintext highlighter-rouge">[&lt;args&gt;]</code> 部分会透传到 bin 命令，所以在 bin 命令的入口文件中接收处理即可。</p>

<p>更新 index.js：</p>

<div class="language-diff highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">#!/usr/bin/env</span> node

- console.log('hello')
<span class="gi">+ console.log('hello',process.argv)
</span></code></pre></div></div>

<p>执行后的输出：</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>yarn create hello world                                                                                                                                                                                                     22:06:08
yarn create v1.22.4
info Using linked package <span class="k">for</span> <span class="s2">"create-hello"</span><span class="nb">.</span>
hello <span class="o">[</span>
  <span class="s1">'/Users/wayouliu/.nvm/versions/node/v14.0.0/bin/node'</span>,
  <span class="s1">'/usr/local/bin/create-hello'</span>,
  <span class="s1">'world'</span>
<span class="o">]</span>
✨  Done <span class="k">in </span>0.59s.
</code></pre></div></div>

<p>然后脚手架中就可以根据参数要求生成相应产出。</p>

<p>当然，参数处理这块一般使用成熟的三方库比如 <a href="https://www.npmjs.com/package/commander">commander</a>。</p>

<h2 id="相关资源">相关资源</h2>

<ul>
  <li><a href="https://classic.yarnpkg.com/en/docs/cli/create/">yarn create</a></li>
  <li><a href="https://classic.yarnpkg.com/blog/2017/05/12/introducing-yarn/">Yarn Create &amp; Yarn 1.0</a></li>
  <li><a href="https://docs.npmjs.com/cli/init">npm-init</a></li>
</ul>

:ET