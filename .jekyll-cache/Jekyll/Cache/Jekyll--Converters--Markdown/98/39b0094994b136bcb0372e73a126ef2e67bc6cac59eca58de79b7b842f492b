I"d<h1 id="安装并切换到-fish-shell">安装并切换到 fish shell</h1>

<h2 id="安装">安装</h2>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>brew <span class="nb">install </span>fish
</code></pre></div></div>

<h2 id="检查安装">检查安装</h2>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>fish <span class="nt">-v</span>
fish, version 3.1.0
</code></pre></div></div>

<h2 id="设置-fish-shell-为默认-shell">设置 fish shell 为默认 shell</h2>

<p>首先添加 fish 到 <code class="language-plaintext highlighter-rouge">/etc/shells</code>：</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo echo</span> /usr/local/bin/fish <span class="o">&gt;&gt;</span> /etc/shells
</code></pre></div></div>

<p>如果报如下错误：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>-bash: /etc/shells: Permission denied
</code></pre></div></div>

<p>尝试以下命令：</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">"/usr/local/bin/fish"</span> | <span class="nb">sudo tee</span> <span class="nt">-a</span> /etc/shells
</code></pre></div></div>

<p>检查添加结果：</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">cat</span> /etc/shells
<span class="c"># List of acceptable shells for chpass(1).</span>
<span class="c"># Ftpd will not allow users to connect who are not using</span>
<span class="c"># one of these shells.</span>

/bin/bash
/bin/csh
/bin/dash
/bin/ksh
/bin/sh
/bin/tcsh
/bin/zsh
/usr/local/bin/fish
</code></pre></div></div>

<p>切换默认 shell 到 fish：</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>chsh <span class="nt">-s</span> /usr/local/bin/fish
</code></pre></div></div>

<h2 id="安装-omf">安装 omf</h2>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>curl <span class="nt">-L</span> https://get.oh-my.fish | fish
</code></pre></div></div>

<p>检查安装：</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>omf <span class="nt">-v</span>
Oh My Fish version 7
</code></pre></div></div>

<p>然后就可以通过 omf 安装相应的主题，插件了。</p>

<h3 id="推荐的插件和主题">推荐的插件和主题</h3>

<ul>
  <li><a href="https://github.com/wting/autojump">autojump</a>
    <ul>
      <li>先正常安装 autojump <code class="language-plaintext highlighter-rouge">brew install autojump</code></li>
      <li>安装 fish autojump 插件 <code class="language-plaintext highlighter-rouge">omf install autojump</code></li>
      <li>配置 fish，添加 <code class="language-plaintext highlighter-rouge">[ -f /usr/local/share/autojump/autojump.fish ]; and source /usr/local/share/autojump/autojump.fis</code> 到 <code class="language-plaintext highlighter-rouge">~/.config/fish/config.fish</code></li>
    </ul>
  </li>
  <li>nvm
    <ul>
      <li>正常安装 nvm <code class="language-plaintext highlighter-rouge">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash</code></li>
      <li>安装 nvm 插件 <code class="language-plaintext highlighter-rouge">omf install nvm</code></li>
      <li>添加 <code class="language-plaintext highlighter-rouge">set -gx NVM_DIR (brew --prefix nvm)</code> 到 fish 配置文件</li>
    </ul>
  </li>
</ul>

<h2 id="fish-的配置">fish 的配置</h2>

<p>通过 <code class="language-plaintext highlighter-rouge">~/.config/fish/config.fish</code> 文件进行配置，如果没有的话，手动创建一个。</p>

<p>也可通过 <code class="language-plaintext highlighter-rouge">fish_config</code> 命令打开一个本地页面进行可视化的配置。</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>fish_config
</code></pre></div></div>

<p><img width="1425" alt="Screen Shot 2020-04-22 at 17 02 46" src="https://user-images.githubusercontent.com/3783096/79962855-2c95ff80-84bb-11ea-87d8-2c07fd3315c9.png" /></p>
<p align="center">可视化配置 fish</p>

<h3 id="命令行的-vi-模式">命令行的 vi 模式</h3>

<p>通过 <code class="language-plaintext highlighter-rouge">fish_vi_key_bindings</code> 可开启 vi 模式，此模式下可通过 <kdb>i&lt;/kbd&gt; 和 <kbd>ESC&lt;/kdb&gt; 来切换 normal 和 insert 模式。
`fish_default_key_bindings` 恢复到正常模式。</kbd></kdb></p>

<p>将 <code class="language-plaintext highlighter-rouge">fish_vi_key_bindings</code> 添加到 fish 的配置文件中可默认开启 vi 模式。</p>

<p>另，该模式下会影响 fish 自动实例快捷键 <kdb>command</kdb> + <kdb>F</kdb>，添加如下脚本到 fish 配置文件以修正：</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">function </span>fish_user_key_bindings
    <span class="k">for </span>mode <span class="k">in </span>insert default visual
        <span class="nb">bind</span> <span class="nt">-M</span> <span class="nv">$mode</span> <span class="se">\c</span>f forward-char
    end
end

fish_user_key_bindings
</code></pre></div></div>

:ET